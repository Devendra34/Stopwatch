
import java.util.logging.Level;
import java.util.logging.Logger;
import java.awt.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author varma
 */
public class StopWatch extends javax.swing.JFrame {

    /**
     * Creates new form StopWatch
     */
    // private int sec=0, min=0, hr, msec;
    a b = new a();
    int lap ;

    public StopWatch() {
        initComponents();     
        //t.setOpaque(false);
        sp.setVisible(false);
        sp.setBackground(Color.BLACK);
        on.setBackground(Color.BLACK);
        sp.setForeground(Color.white);
        on.setForeground(Color.white);
        t.setForeground(Color.white);              
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        h = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        m = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        s = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ms = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        t = new javax.swing.JTextArea();
        on = new javax.swing.JButton();
        sp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Stopwatch - by Devendra");
        setBackground(new java.awt.Color(1, 1, 1));
        setIconImage(Toolkit.getDefaultToolkit().getImage("//home//varma//NetBeansProjects//Stopwatch//img//stopwatch-pro-icon-150x150.png"));

        jPanel1.setBackground(new java.awt.Color(1, 1, 1));
        jPanel1.setForeground(new java.awt.Color(254, 254, 254));

        h.setBackground(new java.awt.Color(1, 1, 1));
        h.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        h.setForeground(new java.awt.Color(254, 254, 254));
        h.setText("00");
        h.setToolTipText("");

        jLabel6.setBackground(new java.awt.Color(1, 1, 1));
        jLabel6.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(254, 254, 254));
        jLabel6.setText(":");
        jLabel6.setToolTipText("");

        m.setBackground(new java.awt.Color(1, 1, 1));
        m.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        m.setForeground(new java.awt.Color(254, 254, 254));
        m.setText("00");
        m.setToolTipText("");

        jLabel4.setBackground(new java.awt.Color(1, 1, 1));
        jLabel4.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(254, 254, 254));
        jLabel4.setText(":");
        jLabel4.setToolTipText("");

        s.setBackground(new java.awt.Color(1, 1, 1));
        s.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        s.setForeground(new java.awt.Color(254, 254, 254));
        s.setText("00");
        s.setToolTipText("");

        jLabel5.setBackground(new java.awt.Color(1, 1, 1));
        jLabel5.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(254, 254, 254));
        jLabel5.setText(":");
        jLabel5.setToolTipText("");

        ms.setBackground(new java.awt.Color(1, 1, 1));
        ms.setFont(new java.awt.Font("Ubuntu", 0, 48)); // NOI18N
        ms.setForeground(new java.awt.Color(254, 254, 254));
        ms.setText("00");
        ms.setToolTipText("");

        t.setEditable(false);
        t.setBackground(new java.awt.Color(1, 1, 1));
        t.setColumns(20);
        t.setFont(new java.awt.Font("Ubuntu", 0, 14)); // NOI18N
        t.setForeground(new java.awt.Color(254, 254, 254));
        t.setRows(5);
        jScrollPane1.setViewportView(t);

        on.setBackground(new java.awt.Color(5, 0, 0));
        on.setText("Start");
        on.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onActionPerformed(evt);
            }
        });

        sp.setBackground(new java.awt.Color(5, 0, 0));
        sp.setForeground(new java.awt.Color(1, 1, 1));
        sp.setText("pause");
        sp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(h)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(m)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(s)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ms))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(on)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sp))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(s, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ms))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(m, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(h))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(on)
                    .addComponent(sp))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void spActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spActionPerformed
        if (!b.isInterrupted()) {
            b.suspend();
            sp.setText("Play");
            on.setText("Stop");
        } else {
            b.resume();
            sp.setText("Pause");
            on.setText("Lap");
        }
    }//GEN-LAST:event_spActionPerformed

    private void onActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onActionPerformed
        if(on.getText()=="Stop"){
            b.stop();
            on.setText("Start");
            h.setText("00");
            m.setText("00");
            s.setText("00");
            ms.setText("00");
            t.setText("");
            sp.setVisible(false);
        }else if(on.getText()=="Start"){
            sp.setVisible(true);
            h.setText("00");
            m.setText("00");
            s.setText("00");
            ms.setText("00");
            t.setText("");
            lap =1;
            a x = new a();
            b = x;
            b.start();
            sp.setText("pause");
            on.setText("Lap");
        }else{
            t.append("Lap "+String.valueOf(lap)+"   ");
            t.append(h.getText()+":"+m.getText()+":"+s.getText()+":"+ms.getText()+"\n");
            lap++; 
        }
           
    }//GEN-LAST:event_onActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StopWatch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StopWatch().setVisible(true);
            }
        });
    }

    class a extends Thread {

        private int sec = 0, min = 0, hr = 0, msec = 0;

        @Override
        public void run() {

            while (true) {
                try {
                    Thread.sleep(9);
                    //Thread.sleep(1); //System.out.println("1 sec delayed");
                } catch (InterruptedException ex) {
                    Logger.getLogger(StopWatch.class.getName()).log(Level.SEVERE, null, ex);
                }
                msec++;
                if (msec < 100) {
                    if (msec < 10) {
                        ms.setText("0" + String.valueOf(msec));
                    } else {
                        ms.setText(String.valueOf(msec));
                    }
                } else {
                    sec++;
                    msec = 0;
                    if (sec < 60) {
                        if (msec == 0) {
                            ms.setText("00");
                        } else {
                            ms.setText(String.valueOf(msec));
                        }
                        if (sec < 10) {
                            s.setText("0" + String.valueOf(sec));
                        } else {
                            s.setText(String.valueOf(sec));
                        }
                    } else {
                        min++;
                        sec = 0;
                        if (min < 60) {
                            if (msec == 0) {
                                ms.setText("00");
                            } else {
                                ms.setText(String.valueOf(msec));
                            }
                            if (min < 10) {
                                m.setText("0" + String.valueOf(min));
                            } else {
                                m.setText(String.valueOf(min));
                            }
                            if (sec < 10) {
                                s.setText("0" + String.valueOf(sec));
                            } else {
                                s.setText(String.valueOf(sec));
                            }
                        } else {
                            hr++;
                            min = 0;
                            h.setText("0" + String.valueOf(hr));
                            if (msec == 0) {
                                ms.setText("00");
                            } else {
                                ms.setText(String.valueOf(msec));
                            }
                            if (min < 10) {
                                m.setText("0" + String.valueOf(min));
                            } else {
                                m.setText(String.valueOf(min));
                            }
                            if (sec < 10) {
                                s.setText("0" + String.valueOf(sec));
                            } else {
                                s.setText(String.valueOf(sec));
                            }
                        }

                    }
                }

            }
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel h;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel m;
    private javax.swing.JLabel ms;
    private javax.swing.JButton on;
    private javax.swing.JLabel s;
    private javax.swing.JButton sp;
    private javax.swing.JTextArea t;
    // End of variables declaration//GEN-END:variables
}
